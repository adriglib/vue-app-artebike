<template>
  <div class="contentcontainer">
    <div class="map">
      <div class="row col s12" id="mapid" style="height: 40vh">

      </div>
    </div>
    <!-- Page Content goes here -->
    <div class="content" >
      <div class="center-align row">
        <div class="info-block">
          Het dichtsbijzijnde laadstation is:
          <div v-for="location in locationsArray">
            <h3 class="orange">{{location.title[0].value}}</h3>
          </div>
        </div>
      </div>
      <div class="center-align row">
        <div class="info-block">
          Beschikbare fietsen:
          <h2 class="orange">7</h2>
        </div>
      </div>
      <div class="center-align row">
        <router-link to="/reserveren" class="col s6 offset-s3 btn waves-effect waves-light" type="submit" name="action">
          Reserveer
        </router-link>

        <div class="grey-text col s12 small-description">
          <router-link to="/reserveren">Reserveren in een ander station.</router-link>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
  import axios from 'axios'

  export default {
    name: 'hello',
    data () {
      return {
        locationsArray: [],
        locations: [],
        loaded: false,
      }
    },
    created () {
      axios
        .get('http://cms.localhost/api/locations')
        .then(({data:locations}) => {
          this.locationsArray = locations
          this.loaded = true
          this.mounted()
        })
        .catch(({message: error}) => {
          console.info(error)
        })
    },
    methods: {
      mounted () {
        let mymap = L.map('mapid').setView([51.061836, 3.712511], 12.45)

        L.tileLayer('https://api.mapbox.com/styles/v1/adriglib/cj9ire1o635ak2qpar3gow3sy/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYWRyaWdsaWIiLCJhIjoiY2l3bHVxYm1wMDAwMjJ0bnE2MWp3azhmdiJ9.E3Udm-vhUj4CEWJuCC_big', {
          maxZoom: 18,
          id: 'mapbox.streets',
          accessToken: 'pk.eyJ1IjoiYWRyaWdsaWIiLCJhIjoiY2l3bHVxYm1wMDAwMjJ0bnE2MWp3azhmdiJ9.E3Udm-vhUj4CEWJuCC_big'
        }).addTo(mymap)
        mymap.attributionControl.setPrefix('')

        for ( let i = 0; i < this.locationsArray.length; i++ ) {
          addMarkers(this.locationsArray[i].field_latitude[0].value, this.locationsArray[i].field_longitude[0].value)
        }

        function addMarkers(latitude, longitude){
          L.marker([latitude,longitude]).addTo(mymap)
        }

        let currentLocation = {}
        mymap.locate({setView: true, maxZoom: 16})

        function onLocationFound(e) {
          let radius = e.accuracy
          L.circle(e.latlng, radius).addTo(mymap).bindPopup("You are here").openPopup()
          currentLocation =  e.latlng
          calculateDistanceBetweenTwoCoordinates(currentLocation.lat, currentLocation.lng, 51.0361237, 3.710936599999968)
        }
        mymap.on('locationfound', onLocationFound)

        function onLocationError(e) {
          alert(e.message)
        }
        mymap.on('locationerror', onLocationError)

        Number.prototype.toRad = function () {
          return this * Math.PI/180;
        };

        function calculateDistanceBetweenTwoCoordinates(lat1, lng1, lat2, lng2){
          var R = 6371; // km
          va<template>
              <div class="contentcontainer">
                <div class="map">
                  <div class="row col s12" id="mapid" style="height: 40vh">

                  </div>
                </div>
                <!-- Page Content goes here -->
                <div class="content" >
                  <div class="center-align row">
                    <div class="info-block">
                      Het dichtsbijzijnde laadstation is:
                      <div v-for="location in locationsArray">
                        <h3 class="orange">{{location.title[0].value}}</h3>
                      </div>
                    </div>
                  </div>
                  <div class="center-align row">
                    <div class="info-block">
                      Beschikbare fietsen:
                      <h2 class="orange">7</h2>
                    </div>
                  </div>
                  <div class="center-align row">
                    <router-link to="/reserveren" class="col s6 offset-s3 btn waves-effect waves-light" type="submit" name="action">
                      Reserveer
                    </router-link>

                    <div class="grey-text col s12 small-description">
                      <router-link to="/reserveren">Reserveren in een ander station.</router-link>
                    </div>
                  </div>
                </div>
              </div>
            </template>

            <script>
              import axios from 'axios'

              export default {
                name: 'hello',
                data () {
                  return {
                    locationsArray: [],
                    locations: [],
                    loaded: false,
                  }
                },
                created () {
                  axios
                    .get('http://cms.localhost/api/locations')
                    .then(({data:locations}) => {
                      this.locationsArray = locations
                      this.loaded = true
                      this.mounted()
                    })
                    .catch(({message: error}) => {
                      console.info(error)
                    })
                },
                methods: {
                  mounted () {
                    let mymap = L.map('mapid').setView([51.061836, 3.712511], 12.45)

                    L.tileLayer('https://api.mapbox.com/styles/v1/adriglib/cj9ire1o635ak2qpar3gow3sy/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYWRyaWdsaWIiLCJhIjoiY2l3bHVxYm1wMDAwMjJ0bnE2MWp3azhmdiJ9.E3Udm-vhUj4CEWJuCC_big', {
                      maxZoom: 18,
                      id: 'mapbox.streets',
                      accessToken: 'pk.eyJ1IjoiYWRyaWdsaWIiLCJhIjoiY2l3bHVxYm1wMDAwMjJ0bnE2MWp3azhmdiJ9.E3Udm-vhUj4CEWJuCC_big'
                    }).addTo(mymap)
                    mymap.attributionControl.setPrefix('')

                    for ( let i = 0; i < this.locationsArray.length; i++ ) {
                      addMarkers(this.locationsArray[i].field_latitude[0].value, this.locationsArray[i].field_longitude[0].value)
                    }

                    function addMarkers(latitude, longitude){
                      L.marker([latitude,longitude]).addTo(mymap)
                    }

                    let currentLocation = {}
                    mymap.locate({setView: true, maxZoom: 16})

                    function onLocationFound(e) {
                      let radius = e.accuracy
                      L.circle(e.latlng, radius).addTo(mymap).bindPopup("You are here").openPopup()
                      currentLocation =  e.latlng
                      calculateDistanceBetweenTwoCoordinates(currentLocation.lat, currentLocation.lng, 51.0361237, 3.710936599999968)
                    }
                    mymap.on('locationfound', onLocationFound)

                    function onLocationError(e) {
                      alert(e.message)
                    }
                    mymap.on('locationerror', onLocationError)

                    Number.prototype.toRad = function () {
                      return this * Math.PI/180;
                    };

                    function calculateDistanceBetweenTwoCoordinates(lat1, lng1, lat2, lng2){
                      var R = 6371; // km
                      var lat1 = parseFloat(lat1);
                      var lng1 = parseFloat(lng1);
                      var lat2 = parseFloat(lat2);
                      var lng2 = parseFloat(lng2);

                      var dLat = (lat2-lat1).toRad();
                      var dLon = (lng2-lng1).toRad();
                      var lat1 = lat1.toRad();
                      var lat2 = lat2.toRad();

                      var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
                        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);
                      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
                      var d = R * c
                      alert(d)
                      return d;//in km
                    }


                    closestLayer(mymap, layers, latlng)
                  },
                }
              }
            </script>


          var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
            Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);
          var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
          var d = R * c
          alert(d)
          return d;//in km
        }


        closestLayer(mymap, layers, latlng)
      },
    }
  }
</script>
